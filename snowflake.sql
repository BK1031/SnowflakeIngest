-- initialize warehouse (BHARAT_INGEST), role (BHARAT_INGEST), user (BHARAT_INGEST)
-- assumes database (BHARAT_KAFKA) and schema (PUBLIC) already exist

CREATE WAREHOUSE BHARAT_INGEST;
CREATE ROLE BHARAT_INGEST;
GRANT USAGE ON WAREHOUSE BHARAT_INGEST TO ROLE BHARAT_INGEST;
GRANT OPERATE ON WAREHOUSE BHARAT_INGEST TO ROLE BHARAT_INGEST;

GRANT OWNERSHIP ON DATABASE BHARAT_KAFKA TO ROLE BHARAT_INGEST;
GRANT OWNERSHIP ON SCHEMA BHARAT_KAFKA.PUBLIC TO ROLE BHARAT_INGEST;

CREATE USER BHARAT_INGEST PASSWORD='password' LOGIN_NAME='BHARAT_INGEST' MUST_CHANGE_PASSWORD=FALSE, DISABLED=FALSE, DEFAULT_WAREHOUSE='BHARAT_INGEST', DEFAULT_NAMESPACE='BHARAT_KAFKA.PUBLIC', DEFAULT_ROLE='BHARAT_INGEST';
ALTER USER BHARAT_INGEST SET TIMEZONE='UTC';

-- set public key access to ingest user
ALTER USER BHARAT_INGEST SET RSA_PUBLIC_KEY='MIICIjANBgkqhkiG9w0BAQE...';

-- create tables
USE ROLE ACCOUNTADMIN;
GRANT ROLE BHARAT_INGEST TO USER BHARAT;
GRANT ROLE BHARAT_INGEST TO USER BHARAT_INGEST;
USE ROLE BHARAT_INGEST;

CREATE OR REPLACE TABLE LIFT_TICKETS (TXID varchar(255), RFID varchar(255), RESORT varchar(255), PURCHASE_TIME datetime, EXPIRATION_TIME date, DAYS number, NAME varchar(255), ADDRESS variant, PHONE varchar(255), EMAIL varchar(255), EMERGENCY_CONTACT variant, SENT_AT timestamp(6), CREATED_AT timestamp(6) DEFAULT CURRENT_TIMESTAMP(6));

-- create snowpipe for file upload
CREATE PIPE LIFT_TICKETS_PIPE AS COPY INTO LIFT_TICKETS
FILE_FORMAT=(TYPE='PARQUET')
MATCH_BY_COLUMN_NAME=CASE_SENSITIVE;

SHOW PIPES;

-- query table

SET rows_to_analyze = 10;
SELECT COUNT(*) FROM LIFT_TICKETS;
SELECT * FROM LIFT_TICKETS ORDER BY created_at DESC LIMIT $rows_to_analyze;

-- kafka batch upload table
SELECT get_ddl('table', 'LIFT_TICKETS_KAFKA_BATCH');
SELECT COUNT(*) FROM LIFT_TICKETS_KAFKA_BATCH;
SELECT * FROM LIFT_TICKETS_KAFKA_BATCH LIMIT $rows_to_analyze;

-- kafka stream upload table
SELECT get_ddl('table', 'LIFT_TICKETS_KAFKA_STREAMING');
SELECT COUNT(*) FROM LIFT_TICKETS_KAFKA_STREAMING;
SELECT * FROM LIFT_TICKETS_KAFKA_STREAMING LIMIT $rows_to_analyze;

DELETE FROM LIFT_TICKETS_KAFKA_STREAMING;